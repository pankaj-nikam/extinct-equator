---
interface Props {
  options: Array<{
    label: string;
    url: string;
    disableTransition?: boolean;
  }>;
  activeOptionUrl: string;
  activeBackgroundColor?: string;
}

const {
  options,
  activeOptionUrl,
  activeBackgroundColor = "#800",
} = Astro.props;

const activeMenuOptionColor = "#faf9f6";
---

<ul class="menu">
  {
    options.map(({ label, url, disableTransition }) => (
      <li>
        <a
          class:list={["menu-item", { active: url === activeOptionUrl }]}
          href={`/${url}`}
          {...(disableTransition && { "data-astro-reload": true })}
        >
          {label}
        </a>
      </li>
    ))
  }
</ul>

<button style="margin-top: 2rem; padding: 1rem;"
  >Click here to go to the Collections page..</button
>

<script>
  import { navigate } from "astro:transitions/client";

  document.addEventListener("astro:page-load", () => {
    document
      .querySelector("button")
      ?.addEventListener("click", () => navigate("/collections"));
  });
</script>

<style define:vars={{ activeMenuOptionColor, activeBackgroundColor }}>
  .menu {
    list-style-type: none;
    display: flex;
    flex-direction: column;
  }

  .menu-item {
    display: block;
    text-decoration: none;
    font-size: 1.25rem;
    padding: 0.75rem 1rem;
    color: var(--brand-primary);

    &.active {
      background-color: var(--activeBackgroundColor);
      color: var(--activeMenuOptionColor);
    }
  }
</style>
